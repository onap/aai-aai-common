{
  "comments": [
    {
      "key": {
        "uuid": "e8a79db6_d586ce07",
        "filename": "aai-core/src/main/java/org/onap/aai/dbgen/SchemaGenerator.java",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1043
      },
      "writtenOn": "2020-07-09T14:14:41Z",
      "side": 1,
      "message": "This is central to the schema creation, for simplicity and readability the collection utils class could be replaced with the following\ners -\u003e ers.values().stream().map(EdgeRule::getLabel).collect(Collectors.toSet())\nand some supporting comments.",
      "revId": "d3b0ddb3fc41af23138a7ba4e4212be89d91fce1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88a59dd4_ca824214",
        "filename": "aai-core/src/main/java/org/onap/aai/dbgen/SchemaGenerator.java",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 6614
      },
      "writtenOn": "2020-07-09T14:27:43Z",
      "side": 1,
      "message": "To be honest, `ers -\u003e ers.values().stream().map(EdgeRule::getLabel).collect(Collectors.toSet())` is less readable to me.\n\nThis is why I isolated this piece of code in CollectionUtils. This enables us to only mention what has to be done (EdgeRule::getLabel) instead of telling how it should be done (which is actually a best practice referred to as Local Reasoning).\n\nWhat is the exact problem here? The passing of a function to a higher order function? Could you please elaborate a bit?",
      "parentUuid": "e8a79db6_d586ce07",
      "revId": "d3b0ddb3fc41af23138a7ba4e4212be89d91fce1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98380783_da20d167",
        "filename": "aai-core/src/main/java/org/onap/aai/dbgen/SchemaGenerator.java",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1043
      },
      "writtenOn": "2020-07-10T16:16:58Z",
      "side": 1,
      "message": "First statement it seems that is matter of opinion so no issue there.\nCompletely agree with the 2nd statement.\nThe need for an entire separate class for one method that is only used in 1 place seems a bit much.\nIf there are other use cases you are aware of for that method then its perfectly fine as is but some comments would be helpful otherwise can it be moved to the SchemaGenerator class with comments.",
      "parentUuid": "88a59dd4_ca824214",
      "revId": "d3b0ddb3fc41af23138a7ba4e4212be89d91fce1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa983a36_da3b3e00",
        "filename": "aai-core/src/main/java/org/onap/aai/dbgen/SchemaGenerator.java",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 6614
      },
      "writtenOn": "2020-07-10T18:19:16Z",
      "side": 1,
      "message": "I have isolated the function in SchemaGenerator and set it as private. I\u0027ve also added some javadoc (even though it\u0027s a private function). Initially I thought about putting in its own class, as collecting values is a pretty common need, but I agree that for this change, this may not be required. Let\u0027s wait for future cases to show up.\n\nThank you for your help.",
      "parentUuid": "98380783_da20d167",
      "revId": "d3b0ddb3fc41af23138a7ba4e4212be89d91fce1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}