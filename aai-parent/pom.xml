<?xml version="1.0" encoding="UTF-8"?>
<!--

============LICENSE_START======================================================
org.onap.aai
===============================================================================
Copyright Â© 2019 AT&T Intellectual Property. All rights reserved.
===============================================================================
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
===========LICENSE_END=========================================================

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.onap.aai.aai-common</groupId>
    <artifactId>aai-common</artifactId>
    <version>1.6.11-SNAPSHOT</version>
  </parent>
  <artifactId>aai-parent</artifactId>
  <name>aai-parent</name>
  <packaging>pom</packaging>

  <modules>

  </modules>

  <properties>
    <!-- update this just prior to release or figure out something with version.properties -->
    <aai.release.version>${aai.common.version}</aai.release.version>
    <aai.common.logging.version>1.5.1</aai.common.logging.version>
    <aai.rest.client.version>1.5.1</aai.rest.client.version>
    <aai.schema.service.version>1.6.6</aai.schema.service.version>

    <aaf.version>2.1.15</aaf.version>
    <antlr.version>4.7.2</antlr.version>
    <activemq.version>5.15.11</activemq.version>
    <codehaus.jackson.version>1.9.13</codehaus.jackson.version>
    <commons.beanutils.version>1.9.4</commons.beanutils.version>
    <commons.cli.version>1.4</commons.cli.version>
    <commons.compress.version>1.19</commons.compress.version>
    <commons.configuration.version>1.10</commons.configuration.version>
    <commons.io.version>2.6</commons.io.version>
    <commons.lang.version>2.6</commons.lang.version>
    <commons.lang3.version>3.9</commons.lang3.version>
    <commons.net.version>3.6</commons.net.version>
    <commons.text.version>1.8</commons.text.version>
    <docker.fabric.version>0.31.0</docker.fabric.version>
    <dmaap.client.version>1.1.9</dmaap.client.version>
    <easy.mock.version>4.0.2</easy.mock.version>
    <eclipse.persistence.version>2.6.2</eclipse.persistence.version>
    <eelf.core.version>1.0.1-oss</eelf.core.version>
    <freemarker.version>2.3.29</freemarker.version>
    <google.guava.version>19.0</google.guava.version>
    <gremlin.version>3.2.3</gremlin.version>
    <groovy.version>2.5.8</groovy.version>
    <gson.version>2.8.6</gson.version>
    <hamcrest.junit.version>2.0.0.0</hamcrest.junit.version>
    <hamcrest.core.version>2.2</hamcrest.core.version>
    <jackson.bom.version>2.10.1</jackson.bom.version>
    <janusgraph.version>0.2.3</janusgraph.version>
    <javatuples.version>1.2</javatuples.version>
    <jaxb.version>2.3.1</jaxb.version>
    <old.jaxb.version>2.3.0.1</old.jaxb.version>
    <jaxrs.version>2.0.1</jaxrs.version>
    <jcommander.version>1.78</jcommander.version>
    <jersey.version>1.19.4</jersey.version>
    <jnr.ffi.version>2.1.11</jnr.ffi.version>
    <jolt.version>0.0.24</jolt.version>
    <jopt.simple.version>5.0.4</jopt.simple.version>
    <jsonassert.version>1.5.0</jsonassert.version>
    <json.patch.version>1.9</json.patch.version>
    <!--
        JSONPath has an bug when it tries to parse an expression
        when nesting reaches three levels so an junit was failing
        when it was moving to an library of 2.3.0 or above
        There seems to be no new releases since 2017 so not sure if
        this library is still active or not
        We might need to move away from this library but its in the core logic
        and would take some time to refactor
        Please don't upgrade to 2.3.0 or above for nexus iq or security scans
        as it could potentially break our code
    -->
    <json.path.version>2.2.0</json.path.version>
    <json.version>20190722</json.version>
    <junit.version>4.12</junit.version>
    <httpclient.version>4.5.10</httpclient.version>
    <io.swagger.version>1.5.24</io.swagger.version>
    <logback.version>1.2.3</logback.version>
    <slf4j.version>1.7.25</slf4j.version>
    <log4j.version>1.2.17</log4j.version>
    <mockito.all.version>1.10.19</mockito.all.version>
    <mockito.core.version>1.10.19</mockito.core.version>
    <netty.handler.version>4.1.43.Final</netty.handler.version>
    <netty.version>4.0.56.Final</netty.version>
    <opencsv.version>3.1</opencsv.version>
    <powermock.version>1.6.6</powermock.version>
    <plexus.utils.version>3.1.1</plexus.utils.version>
    <reflections.version>0.9.10</reflections.version>
    <snakeyaml.version>1.25</snakeyaml.version>

    <spring.boot.version>2.1.12.RELEASE</spring.boot.version>
    <javax.servlet.version>3.1.0</javax.servlet.version>
    <javax.annotation.version>1.2</javax.annotation.version>

    <sonar.jacoco.reportPath />
    <sonar.jacoco.itReportPath />
    <sonar.jacoco.reportMissing.force.zero />

    <!-- we let things pass by default, set custom level for each child project -->
    <jacoco.line.coverage.limit>0.00</jacoco.line.coverage.limit>

    <jacoco.version>0.8.5</jacoco.version>
    <sonar-jacoco-listeners.version>3.2</sonar-jacoco-listeners.version>
    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
    <sonar.coverage.jacoco.xmlReportPaths>${project.reporting.outputDirectory}/jacoco-ut/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <sonar.exclusions>**/gen/**,**/generated-sources/**,**/yang-gen**,**/pax/**</sonar.exclusions>

    <sonar.scanner.version>3.7.0.1746</sonar.scanner.version>

    <spring.version>5.1.13.RELEASE</spring.version>
    <spring.jms.version>5.1.13.RELEASE</spring.jms.version>
    <spring.test.version>5.1.13.RELEASE</spring.test.version>
    <spring.security.rsa.version>1.0.8.RELEASE</spring.security.rsa.version>
    <json.simple.version>1.1.1</json.simple.version>
    <powermock.api.mockito2.version>2.0.4</powermock.api.mockito2.version>
    <aspectj.version>1.9.1</aspectj.version>
    <logging.analytics.version>1.5.1</logging.analytics.version>
  </properties>

  <profiles>
    <profile>
      <id>spring-boot-2-1</id>
      <properties>
        <spring.boot.version>2.1.12.RELEASE</spring.boot.version>
      </properties>
    </profile>
    <profile>
      <id>spring-boot-1-5</id>
      <properties>
        <spring.boot.version>1.5.22.RELEASE</spring.boot.version>
      </properties>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>com.googlecode.json-simple</groupId>
        <artifactId>json-simple</artifactId>
        <version>${json.simple.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-schema-ingest</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-core</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-aaf-auth</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-els-onap-logging</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-annotations</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-rest</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring.boot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-test</artifactId>
        <scope>test</scope>
        <version>${spring.boot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.test.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-configuration</groupId>
        <artifactId>commons-configuration</artifactId>
        <version>${commons.configuration.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons.lang3.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>${commons.lang.version}</version>
      </dependency>

      <dependency>
        <groupId>com.att.eelf</groupId>
        <artifactId>eelf-core</artifactId>
        <version>${eelf.core.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-access</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>java-hamcrest</artifactId>
        <version>${hamcrest.junit.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrest.core.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-junit</artifactId>
        <version>${hamcrest.junit.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${javax.servlet.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>${javax.annotation.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${google.guava.version}</version>
      </dependency>

      <dependency>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph-core</artifactId>
        <version>${janusgraph.version}</version>
      </dependency>

      <dependency>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph-cassandra</artifactId>
        <version>${janusgraph.version}</version>
      </dependency>

      <dependency>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph-cql</artifactId>
        <version>${janusgraph.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.jnr</groupId>
        <artifactId>jnr-ffi</artifactId>
        <version>${jnr.ffi.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>tinkergraph-gremlin</artifactId>
        <version>${gremlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-core</artifactId>
        <version>${gremlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-driver</artifactId>
        <version>${gremlin.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-groovy</artifactId>
        <version>${gremlin.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy</artifactId>
        <version>${groovy.version}</version>
        <classifier>indy</classifier>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito.all.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4-rule-agent</artifactId>
        <version>${powermock.version}</version>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito2</artifactId>
        <version>${powermock.api.mockito2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-core</artifactId>
        <version>${powermock.api.mockito2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-javaagent</artifactId>
        <version>${powermock.version}</version>
      </dependency>
      <dependency>
        <groupId>com.beust</groupId>
        <artifactId>jcommander</artifactId>
        <version>${jcommander.version}</version>
      </dependency>

      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-runtime</artifactId>
        <version>${antlr.version}</version>
      </dependency>
      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>${antlr.version}</version>
      </dependency>

      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>${json.version}</version>
      </dependency>

      <dependency>
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${freemarker.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxb.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-broker</artifactId>
        <version>${activemq.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-client</artifactId>
        <version>${activemq.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-openwire-legacy</artifactId>
        <version>${activemq.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aaf.authz</groupId>
        <artifactId>aaf-cadi-core</artifactId>
        <version>${aaf.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.onap.aaf.authz</groupId>
        <artifactId>aaf-cadi-aaf</artifactId>
        <version>${aaf.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easy.mock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-xjc</artifactId>
        <version>${old.jaxb.version}</version>
      </dependency>

      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${old.jaxb.version}</version>
      </dependency>

      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-core</artifactId>
        <version>${old.jaxb.version}</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.persistence</groupId>
        <artifactId>eclipselink</artifactId>
        <version>${eclipse.persistence.version}</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.persistence</groupId>
        <artifactId>org.eclipse.persistence.moxy</artifactId>
        <version>${eclipse.persistence.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.fge</groupId>
        <artifactId>json-patch</artifactId>
        <version>${json.patch.version}</version>
      </dependency>

      <dependency>
        <groupId>com.jayway.jsonpath</groupId>
        <artifactId>json-path</artifactId>
        <version>${json.path.version}</version>
      </dependency>
      <dependency>
        <groupId>com.jayway.jsonpath</groupId>
        <artifactId>json-path-assert</artifactId>
        <version>${json.path.version}</version>
      </dependency>

      <dependency>
        <groupId>org.javatuples</groupId>
        <artifactId>javatuples</artifactId>
        <version>${javatuples.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>${commons.text.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-core-asl</artifactId>
        <version>${codehaus.jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-core</artifactId>
        <version>${jersey.version}</version>
      </dependency>

      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-client</artifactId>
        <version>${jersey.version}</version>
      </dependency>

      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-json</artifactId>
        <version>${jersey.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>${jaxrs.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons.cli.version}</version>
      </dependency>

      <dependency>
        <groupId>com.bazaarvoice.jolt</groupId>
        <artifactId>jolt-complete</artifactId>
        <version>${jolt.version}</version>
      </dependency>

      <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>${opencsv.version}</version>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>apache-log4j-extras</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons.io.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aspects</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-rsa</artifactId>
        <version>${spring.security.rsa.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jms</artifactId>
        <version>${spring.jms.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.logging-service</groupId>
        <artifactId>common-logging</artifactId>
        <version>${aai.common.logging.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.logging-service</groupId>
        <artifactId>logging-api</artifactId>
        <version>${aai.common.logging.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.logging-analytics</groupId>
        <artifactId>logging-slf4j</artifactId>
        <version>${logging.analytics.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai</groupId>
        <artifactId>rest-client</artifactId>
        <version>${aai.rest.client.version}</version>
      </dependency>

      <dependency>
        <groupId>net.sf.jopt-simple</groupId>
        <artifactId>jopt-simple</artifactId>
        <version>${jopt.simple.version}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-core</artifactId>
        <version>${io.swagger.version}</version>
      </dependency>

      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>${aspectj.version}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${io.swagger.version}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-jersey-jaxrs</artifactId>
        <version>${io.swagger.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.dmaap.messagerouter.dmaapclient</groupId>
        <artifactId>dmaapClient</artifactId>
        <version>${dmaap.client.version}</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-handler</artifactId>
        <version>${netty.handler.version}</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-all</artifactId>
        <version>${netty.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.schema-service</groupId>
        <artifactId>aai-schema</artifactId>
        <version>${aai.schema.service.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpclient.version}</version>
      </dependency>

      <dependency>
        <groupId>org.skyscreamer</groupId>
        <artifactId>jsonassert</artifactId>
        <version>${jsonassert.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-utils</artifactId>
        <version>${plexus.utils.version}</version>
      </dependency>

      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons.compress.version}</version>
      </dependency>

      <dependency>
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>${reflections.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-net</groupId>
        <artifactId>commons-net</artifactId>
        <version>${commons.net.version}</version>
      </dependency>

    </dependencies>

  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring.boot.version}</version>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker.fabric.version}</version>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <configuration>
            <!-- Note: This exclusion list should match <sonar.exclusions> property
                 above -->
            <excludes>
              <exclude>**/gen/**</exclude>
              <exclude>**/generated-sources/**</exclude>
              <exclude>**/yang-gen/**</exclude>
              <exclude>**/pax/**</exclude>
            </excludes>
          </configuration>
          <executions>
            <!-- Prepares the property pointing to the JaCoCo runtime agent which
                 is passed as VM argument when Maven the Surefire plugin is executed. -->
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution data
                     . -->
                <destFile>${project.build.directory}/code-coverage/jacoco-ut.exec</destFile>
                <!-- Sets the name of the property containing the settings for JaCoCo
                     runtime agent. -->
                <propertyName>surefireArgLine</propertyName>
              </configuration>
            </execution>
            <!-- Ensures that the code coverage report for unit tests is created
                 after unit tests have been run. -->
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution data
                     . -->
                <dataFile>${project.build.directory}/code-coverage/jacoco-ut.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>pre-integration-test</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution data
                     . -->
                <destFile>${project.build.directory}/code-coverage/jacoco-it.exec</destFile>
                <!-- Sets the name of the property containing the settings for JaCoCo
                     runtime agent. -->
                <propertyName>failsafeArgLine</propertyName>
              </configuration>
            </execution>
            <!-- Ensures that the code coverage report for integration tests after
                 integration tests have been run. -->
            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution data
                     . -->
                <dataFile>${project.build.directory}/code-coverage/jacoco-it.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>default-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <dataFile>${project.build.directory}/code-coverage/jacoco-ut.exec</dataFile>
                <rules>
                  <rule implementation="org.jacoco.maven.RuleConfiguration">
                    <element>BUNDLE</element>
                    <limits>
                      <limit implementation="org.jacoco.report.check.Limit">
                        <counter>LINE</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>${jacoco.line.coverage.limit}</minimum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M4</version>
          <configuration>
            <!-- Sets the VM argument line used when unit tests are run. -->
            <argLine>${surefireArgLine}</argLine>
            <!-- Excludes integration tests when unit tests are run. -->
            <excludes>
              <exclude>**/IT*.java</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M4</version>
          <executions>
            <!-- Ensures that both integration-test and verify goals of the Failsafe
                 Maven plugin are executed. -->
            <execution>
              <id>integration-tests</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <!-- Sets the VM argument line used when integration tests are run. -->
                <argLine>${failsafeArgLine}</argLine>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar.scanner.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
    </plugins>

  </build>
</project>
