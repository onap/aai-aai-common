<?xml version="1.0" encoding="UTF-8"?>
<!--

============LICENSE_START======================================================
org.onap.aai
===============================================================================
Copyright Â© 2019 AT&T Intellectual Property. All rights reserved.
===============================================================================
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
===========LICENSE_END=========================================================

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.onap.aai.aai-common</groupId>
    <artifactId>aai-common</artifactId>
    <version>1.16.0-SNAPSHOT</version>
  </parent>
  <artifactId>aai-parent</artifactId>
  <name>aai-parent</name>
  <packaging>pom</packaging>

  <modules>

  </modules>

  <properties>
    <maven.compiler.release>11</maven.compiler.release>
    <!-- update this just prior to release or figure out something with version.properties -->
    <aai.release.version>${aai.common.version}</aai.release.version>
    <aai.schema.service.version>1.12.7</aai.schema.service.version>

    <antlr.version>4.11.1</antlr.version>
    <commons.beanutils.version>1.9.4</commons.beanutils.version>
    <commons.cli.version>1.5.0</commons.cli.version>
    <commons.compress.version>1.27.0</commons.compress.version>
    <commons.configuration2.version>2.10.1</commons.configuration2.version>
    <commons.io.version>2.16.1</commons.io.version>
    <commons.lang3.version>3.15.0</commons.lang3.version>
    <commons.net.version>3.8.0</commons.net.version>
    <commons.text.version>1.10.0</commons.text.version>
    <docker.fabric.version>0.40.2</docker.fabric.version>
    <eclipse.persistence.version>3.0.1</eclipse.persistence.version>
    <google.guava.version>33.4.0-jre</google.guava.version>
    <gremlin.version>3.7.3</gremlin.version>
    <janusgraph.version>1.1.0</janusgraph.version>
    <gson.version>2.9.1</gson.version>
    <hamcrest.junit.version>2.0.0.0</hamcrest.junit.version>
    <hamcrest.core.version>2.2</hamcrest.core.version>
    <jaxb.version>2.3.1</jaxb.version>
    <jaxrs.version>2.1.1</jaxrs.version>
    <jcommander.version>1.78</jcommander.version>
    <jnr.ffi.version>2.2.12</jnr.ffi.version>
    <jolt.version>0.1.7</jolt.version>
    <jopt.simple.version>5.0.4</jopt.simple.version>
    <jsonassert.version>1.5.1</jsonassert.version>
    <json.patch.version>1.9</json.patch.version>
    <!--
        JSONPath has an bug when it tries to parse an expression
        when nesting reaches three levels so an junit was failing
        when it was moving to an library of 2.3.0 or above
        There seems to be no new releases since 2017 so not sure if
        this library is still active or not
        We might need to move away from this library but its in the core logic
        and would take some time to refactor
        Please don't upgrade to 2.3.0 or above for nexus iq or security scans
        as it could potentially break our code
      -->
    <spring.boot.version>3.0.13</spring.boot.version>
    <json.path.version>2.2.0</json.path.version>
    <json.version>20240303</json.version>
    <junit.version>4.12</junit.version>
    <logback.version>1.4.10</logback.version>
    <slf4j.version>2.0.7</slf4j.version>
    <mockito.all.version>3.4.0</mockito.all.version>
    <mockito.core.version>3.4.0</mockito.core.version>
    <opencsv.version>3.1</opencsv.version>
    <plexus.utils.version>3.1.1</plexus.utils.version>
    <reflections.version>0.9.10</reflections.version>
    <lombok.version>1.18.36</lombok.version>
    <testcontainers.version>1.20.4</testcontainers.version>

    <jakarta.servlet.version>3.1.0</jakarta.servlet.version>
    <javax.annotation.version>1.2</javax.annotation.version>

    <sonar.jacoco.reportPath />
    <sonar.jacoco.itReportPath />
    <sonar.jacoco.reportMissing.force.zero />

    <!-- we let things pass by default, set custom level for each child project -->
    <jacoco.line.coverage.limit>0.00</jacoco.line.coverage.limit>

    <jacoco.version>0.8.12</jacoco.version>
    <sonar-jacoco-listeners.version>3.2</sonar-jacoco-listeners.version>
    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
    <sonar.coverage.jacoco.xmlReportPaths>${project.reporting.outputDirectory}/jacoco-ut/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <sonar.exclusions>**/gen/**,**/generated-sources/**,**/yang-gen**,**/pax/**</sonar.exclusions>

    <sonar.scanner.version>3.7.0.1746</sonar.scanner.version>

    <json.simple.version>1.1.1</json.simple.version>
    <aspectj.version>1.9.1</aspectj.version>
    <logging.analytics.version>1.5.1</logging.analytics.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.googlecode.json-simple</groupId>
        <artifactId>json-simple</artifactId>
        <version>${json.simple.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-schema-ingest</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-core</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-els-onap-logging</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-annotations</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>org.onap.aai.aai-common</groupId>
        <artifactId>aai-rest</artifactId>
        <version>${aai.release.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons.lang3.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-access</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>java-hamcrest</artifactId>
        <version>${hamcrest.junit.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrest.core.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-junit</artifactId>
        <version>${hamcrest.junit.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.annotation</groupId>
        <artifactId>jakarta.annotation-api</artifactId>
        <version>2.1.1</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${google.guava.version}</version>
      </dependency>

      <dependency>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph-core</artifactId>
        <version>${janusgraph.version}</version>
        <exclusions>
          <exclusion>
            <!-- vulnerable dependency -->
            <groupId>com.rabbitmq</groupId>
            <artifactId>amqp-client</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph-cql</artifactId>
        <version>${janusgraph.version}</version>
      </dependency>

      <dependency>
        <groupId>org.janusgraph</groupId>
        <artifactId>janusgraph-inmemory</artifactId>
        <version>${janusgraph.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.jnr</groupId>
        <artifactId>jnr-ffi</artifactId>
        <version>${jnr.ffi.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>tinkergraph-gremlin</artifactId>
        <version>${gremlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-core</artifactId>
        <version>${gremlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-driver</artifactId>
        <version>${gremlin.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-groovy</artifactId>
        <version>${gremlin.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito.all.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.beust</groupId>
        <artifactId>jcommander</artifactId>
        <version>${jcommander.version}</version>
      </dependency>

      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-runtime</artifactId>
        <version>${antlr.version}</version>
      </dependency>
      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>${antlr.version}</version>
      </dependency>

      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>${json.version}</version>
      </dependency>

      <dependency>
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${freemarker.version}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>3.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jaxb</groupId>
        <artifactId>jaxb-runtime</artifactId>
        <version>3.0.1</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.persistence</groupId>
        <artifactId>eclipselink</artifactId>
        <version>${eclipse.persistence.version}</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.persistence</groupId>
        <artifactId>org.eclipse.persistence.moxy</artifactId>
        <version>${eclipse.persistence.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.fge</groupId>
        <artifactId>json-patch</artifactId>
        <version>${json.patch.version}</version>
      </dependency>

      <dependency>
        <groupId>com.jayway.jsonpath</groupId>
        <artifactId>json-path</artifactId>
        <version>${json.path.version}</version>
      </dependency>
      <dependency>
        <groupId>com.jayway.jsonpath</groupId>
        <artifactId>json-path-assert</artifactId>
        <version>${json.path.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>${commons.text.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons.cli.version}</version>
      </dependency>

      <dependency>
        <groupId>com.bazaarvoice.jolt</groupId>
        <artifactId>jolt-complete</artifactId>
        <version>${jolt.version}</version>
      </dependency>

      <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>${opencsv.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons.io.version}</version>
      </dependency>

      <dependency>
        <groupId>net.sf.jopt-simple</groupId>
        <artifactId>jopt-simple</artifactId>
        <version>${jopt.simple.version}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-core</artifactId>
        <version>2.2.25</version>
      </dependency>

      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>${aspectj.version}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>2.2.25</version>
      </dependency>

      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-jersey-jaxrs</artifactId>
        <version>${io.swagger.version}</version>
      </dependency>
      <dependency>
        <groupId>org.onap.aai.schema-service</groupId>
        <artifactId>aai-schema</artifactId>
        <version>${aai.schema.service.version}</version>
      </dependency>

      <dependency>
        <groupId>org.skyscreamer</groupId>
        <artifactId>jsonassert</artifactId>
        <version>${jsonassert.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-utils</artifactId>
        <version>${plexus.utils.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons.compress.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-configuration2</artifactId>
        <version>${commons.configuration2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>${reflections.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-net</groupId>
        <artifactId>commons-net</artifactId>
        <version>${commons.net.version}</version>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>

    </dependencies>

  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring.boot.version}</version>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker.fabric.version}</version>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <configuration>
            <!-- Note: This exclusion list should match <sonar.exclusions> property
                 above -->
            <excludes>
              <exclude>**/gen/**</exclude>
              <exclude>**/generated-sources/**</exclude>
              <exclude>**/yang-gen/**</exclude>
              <exclude>**/pax/**</exclude>
            </excludes>
          </configuration>
          <executions>
            <!-- Prepares the property pointing to the JaCoCo runtime agent which
                 is passed as VM argument when Maven the Surefire plugin is executed. -->
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution data
                     . -->
                <destFile>${project.build.directory}/code-coverage/jacoco-ut.exec</destFile>
                <!-- Sets the name of the property containing the settings for JaCoCo
                     runtime agent. -->
                <propertyName>surefireArgLine</propertyName>
              </configuration>
            </execution>
            <!-- Ensures that the code coverage report for unit tests is created
                 after unit tests have been run. -->
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution data
                     . -->
                <dataFile>${project.build.directory}/code-coverage/jacoco-ut.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>pre-integration-test</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution data
                     . -->
                <destFile>${project.build.directory}/code-coverage/jacoco-it.exec</destFile>
                <!-- Sets the name of the property containing the settings for JaCoCo
                     runtime agent. -->
                <propertyName>failsafeArgLine</propertyName>
              </configuration>
            </execution>
            <!-- Ensures that the code coverage report for integration tests after
                 integration tests have been run. -->
            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution data
                     . -->
                <dataFile>${project.build.directory}/code-coverage/jacoco-it.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>default-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <dataFile>${project.build.directory}/code-coverage/jacoco-ut.exec</dataFile>
                <rules>
                  <rule implementation="org.jacoco.maven.RuleConfiguration">
                    <element>BUNDLE</element>
                    <limits>
                      <limit implementation="org.jacoco.report.check.Limit">
                        <counter>LINE</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>${jacoco.line.coverage.limit}</minimum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.1.2</version>
          <configuration>
            <!-- Sets the VM argument line used when unit tests are run. -->
            <argLine>${surefireArgLine}</argLine>
            <!-- Excludes integration tests when unit tests are run. -->
            <excludes>
              <exclude>**/IT*.java</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.1.2</version>
          <executions>
            <!-- Ensures that both integration-test and verify goals of the Failsafe
                 Maven plugin are executed. -->
            <execution>
              <id>integration-tests</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <!-- Sets the VM argument line used when integration tests are run. -->
                <argLine>${failsafeArgLine}</argLine>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.3.1</version>
          <configuration>
            <skip>True</skip>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
    </plugins>

  </build>
</project>
